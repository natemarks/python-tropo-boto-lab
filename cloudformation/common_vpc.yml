AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  vpccidr:
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.y.0.0/16
    Default: 10.77.0.0/16
    Description: CIDR for this VPC
  environment:
    Type: String
    Description: VPCs are often created for a single-purpose environment
  RedPublicSubnetCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Primary Public /24 Subnet of the VPC CIDR
    Default: 10.77.0.0/24
    Description: CIDR for the default red public subnet
  BluePublicSubnetCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Secondary Public /24 Subnet of the VPC CIDR
    Default: 10.77.1.0/24
    Description: CIDR for the default blue public subnet
  RedPrivateSubnetCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Primary Public /24 Subnet of the VPC CIDR
    Default: 10.77.2.0/24
    Description: CIDR for the default red public subnet
  BluePrivateSubnetCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Secondary Public /24 Subnet of the VPC CIDR
    Default: 10.77.3.0/24
    Description: CIDR for the default blue public subnet
  RedAvailbilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
  BlueAvailbilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1d
  PrivateDNSZone:
    Type: String
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref vpccidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: !Ref environment
  PrivateRoute53Zone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Private hosted zone for dev VPC"
      Name: !Ref PrivateDNSZone
      VPCs:
        -
          VPCId: !Ref VPC
          VPCRegion: !Ref "AWS::Region"
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RedPublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref RedAvailbilityZone
      CidrBlock: !Ref RedPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "red_public_subnet"
        -
          Key: "internet_access"
          Value: "public"
        -
          Key: "availability_zone"
          Value: "red"
  BluePublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref BlueAvailbilityZone
      CidrBlock: !Ref BluePublicSubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "blue_public_subnet"
        -
          Key: "internet_access"
          Value: "public"
        -
          Key: "availability_zone"
          Value: "blue"
  RedPublicSRTA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref RedPublicSubnet
  BluePublicSRTA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref BluePublicSubnet
  RedPrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref RedAvailbilityZone
      CidrBlock: !Ref RedPrivateSubnetCIDR
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "red_private_subnet"
        -
          Key: "internet_access"
          Value: "private"
        -
          Key: "availability_zone"
          Value: "red"
  BluePrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref BlueAvailbilityZone
      CidrBlock: !Ref BluePrivateSubnetCIDR
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "blue_private_subnet"
        -
          Key: "internet_access"
          Value: "private"
        -
          Key: "availability_zone"
          Value: "blue"
  RedPrivateSRTA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RedPrivateRouteTable
      SubnetId: !Ref RedPrivateSubnet
  BluePrivateSRTA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref BluePrivateRouteTable
      SubnetId: !Ref BluePrivateSubnet
  PublicDefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable
  RedPrivateDefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref RedNatGateway
      RouteTableId: !Ref RedPrivateRouteTable
  BluePrivateDefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref BlueNatGateway
      RouteTableId: !Ref BluePrivateRouteTable
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "public_routing_table"
  RedPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "red_private_routing_table"
        -
          Key: "availability_zone"
          Value: "red"
  BluePrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "blue_private_routing_table"
        -
          Key: "availability_zone"
          Value: "blue"
  RedNatGatewatEIP:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  BlueNatGatewatEIP:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  RedNatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt RedNatGatewatEIP.AllocationId
      SubnetId: !Ref RedPublicSubnet
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "red_nat_gateway"
        -
          Key: "availability_zone"
          Value: "red"
  BlueNatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt BlueNatGatewatEIP.AllocationId
      SubnetId: !Ref BluePublicSubnet
      Tags:
        -
          Key: "environment"
          Value: !Ref environment
        -
          Key: "Name"
          Value: "blue_nat_gateway"
        -
          Key: "availability_zone"
          Value: "blue"
