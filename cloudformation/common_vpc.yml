AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  vpccidr:
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
  PublicDiagnosticCIDRA:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Primary Public /24 Subnet of the VPC CIDR
    # Default: 10.216.0.0/24
  PublicDiagnosticCIDRB:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Secondary Public /24 Subnet of the VPC CIDR
    # Default: 10.216.1.0/24
  AZsideA:
    Type: AWS::EC2::AvailabilityZone::Name
    # Default: us-east-1a
  AZsideB:
    Type: AWS::EC2::AvailabilityZone::Name
    # Default: us-east-1b
  PrivateHostedZone:
    Type: String
    # Default: "dev-ncareconnect.aws.ncare"
  PublicHostedZoneID:
    Type: String
    # Default: ZNY9QSWIQRHY4
  vpcEnvironment:
    Type: String
    # Default: DEV_VPC
    AllowedValues:
      - DEV_VPC
      - PROD_VPC
    ConstraintDescription: Set DEV_VPC for the development VPC or PROD_VPC for the Production VPC
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref vpccidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        -
          Key: "vpcEnvironment"
          Value: !Ref vpcEnvironment
  PrivateDNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Private hosted zone for dev VPC"
      Name: !Ref PrivateHostedZone
      VPCs:
        -
          VPCId: !Ref VPC
          VPCRegion: !Ref "AWS::Region"
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "vpcEnvironment"
          Value: !Ref vpcEnvironment
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  SubnetPublicSharedA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZsideA
      CidrBlock: !Ref PublicDiagnosticCIDRA
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SubnetPublicSharedB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZsideB
      CidrBlock: !Ref PublicDiagnosticCIDRB
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SRTAPublicA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref StaticNATRouteTable
      SubnetId: !Ref SubnetPublicSharedA
  SRTAPublicB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref StaticNATRouteTable
      SubnetId: !Ref SubnetPublicSharedB
  RouteDefaultPublic:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref StaticNATRouteTable
  RouteDefaultPrivateA:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
      RouteTableId: !Ref DynamicNATRouteTableA
  RouteDefaultPrivateB:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
      RouteTableId: !Ref DynamicNATRouteTableB
  StaticNATRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
  DynamicNATRouteTableA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
  DynamicNATRouteTableB:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
  EIPNatGWA:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  EIPNatGWB:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGWA.AllocationId
      SubnetId: !Ref SubnetPublicSharedA
  NatGatewayB:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGWB.AllocationId
      SubnetId: !Ref SubnetPublicSharedB
  nCareWMAVpnGateway:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: ipsec.1
      Tags:
        -
          Key: "vpcEnvironment"
          Value: !Ref vpcEnvironment
  nCareWMACustomerGateway:
    Type: AWS::EC2::CustomerGateway
    Properties:
      BgpAsn: 65000
      IpAddress: 205.153.29.41
      Tags:
        -
          Key: "vpcEnvironment"
          Value: !Ref vpcEnvironment
Outputs:
  vpcid:
    Description: ID of Shared Infrastructure VPC
    Value: !Ref VPC
  StaticNATRouteTable:
    Description: ID of Public Route Table
    Value: !Ref StaticNATRouteTable
  DynamicNATRouteTableA:
    Description: ID of Private Route Table - A
    Value: !Ref DynamicNATRouteTableA
  DynamicNATRouteTableB:
    Description: ID of Private Route Table - B
    Value: !Ref DynamicNATRouteTableB
  privateHostedZoneID:
    Description: ID of Private DNS Hosted Zone
    Value: !Ref PrivateDNS
